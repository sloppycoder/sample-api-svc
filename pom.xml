<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.1.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>net.vino9</groupId>
    <artifactId>sample-api-svc</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <description>Reference implementation of an API resource server</description>

    <properties>
        <java.version>11</java.version>
        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
        <chao-monkey.version>2.1.1</chao-monkey.version>
        <jib-maven-plugin.version>1.8.0</jib-maven-plugin.version>


        <!--
          to use a custom base image as java run time, override the follow property
        -->
        <!--
        <base-image>localhost:32000/ubi8-java11:v1</base-image>
        -->
        <base-image>gcr.io/distroless/java:11</base-image>

        <!-- define private registry, name and tag for pushing built image -->
        <push.image.base>localhost:32000/dev</push.image.base>
        <push.image.name>${push.image.base}/${project.artifactId}</push.image.name>
        <push.image.tag>dev</push.image.tag>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- stress test utility -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>chaos-monkey-spring-boot</artifactId>
                <version>${chao-monkey.version}</version>
            </dependency>
            <!-- database drivers -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql-driver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-sync</artifactId>
                <version>${mongodb-driver.verison}</version>
            </dependency>
            <!-- cache providers, except for lettuce redis driver, which is part of spring already -->
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <!-- misc utilities -->
        </dependencies>

    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <defaultGoal>clean test</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>boot</id>
            <build>
                <defaultGoal>clean spring-boot:run</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${project.parent.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jib</id>
            <build>
                <defaultGoal>clean compile jib:build</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${jib-maven-plugin.version}</version>
                        <configuration>
                            <allowInsecureRegistries>true</allowInsecureRegistries>
                            <from>
                                <image>${base-image}</image>
                            </from>
                            <to>
                                <image>${push.image.name}</image>
                                <tags>
                                    <tag>${project.version}</tag>
                                    <tag>${push.image.tag}</tag>
                                    <!-- TODO: add more tag with git hash, to provide binary to source code traceability -->
                                </tags>
                            </to>
                            <container>
                                <jvmFlags>
                                    <jvmFlag>-mx512m</jvmFlag>
                                    <jvmFlag>-XX:+ExitOnOutOfMemoryError</jvmFlag>
                                    <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                                </jvmFlags>
                            </container>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>